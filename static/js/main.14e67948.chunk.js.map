{"version":3,"sources":["images/resizedlogo.png","data/data.js","services/fetchPlanets.js","context/PlanetsContext.js","context/PlanetsProvider.js","components/NotFound.jsx","components/Table.jsx","components/Header.jsx","components/FiltersForm.jsx","components/Filters.jsx","components/Loading.jsx","pages/Home.jsx","App.js","index.js","images/sad-beep.gif"],"names":["module","exports","INITIAL_STATE","filterByName","name","filterByNumericValues","INITIAL_COLUMNS","comparisonOptions","fetchPlanets","fetch","then","response","json","ok","Promise","resolve","reject","PlanetsContext","createContext","PlanetsProvider","children","useState","data","setData","renderPlanets","setRenderPlanets","isLoading","setIsLoading","filters","setFilters","column","setColumn","comparison","setComparison","value","setValue","columnOptions","setColumnOptions","getPlanets","a","results","useEffect","usedColumns","map","filter","updatedOptions","option","includes","updateOptions","context","handleChange","target","filteredByName","planet","toLowerCase","handleClick","filteredByNumeric","Number","filterPlanets","deleteFilter","col","Provider","NotFound","className","src","sadBeep","alt","Table","useContext","length","Object","keys","key","title","index","charAt","toUpperCase","slice","replace","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","created","edited","url","Header","logo","FiltersForm","htmlFor","id","type","placeholder","onChange","data-testid","onClick","Filters","Loading","Home","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14e67948.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resizedlogo.613fc992.png\";","export const INITIAL_STATE = {\n  filterByName: { name: '' },\n  filterByNumericValues: [],\n};\n\nexport const INITIAL_COLUMNS = [\n  'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water',\n];\n\nexport const comparisonOptions = ['maior que', 'menor que', 'igual a'];\n","const API_URL = 'https://swapi.dev/api/planets/';\n\nconst fetchPlanets = () => (\n  fetch(API_URL).then((response) => (response.json()\n    .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ))\n);\n\nexport default fetchPlanets;\n","import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\n\nexport default PlanetsContext;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { INITIAL_COLUMNS, INITIAL_STATE } from '../data/data';\nimport fetchPlanets from '../services/fetchPlanets';\nimport PlanetsContext from './PlanetsContext';\n\nexport default function PlanetsProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [renderPlanets, setRenderPlanets] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filters, setFilters] = useState(INITIAL_STATE);\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState('0');\n  const [columnOptions, setColumnOptions] = useState(INITIAL_COLUMNS);\n\n  const getPlanets = async () => {\n    const { results } = await fetchPlanets();\n    setData(results);\n    setRenderPlanets(results);\n    setIsLoading(false);\n  };\n\n  useEffect(() => { getPlanets(); }, []);\n\n  const handleChange = ({ target }) => {\n    setFilters({ ...filters, filterByName: { name: target.value } });\n    const filteredByName = data.filter((planet) => (\n      planet.name.toLowerCase().includes(target.value.toLowerCase())));\n    setRenderPlanets(filteredByName);\n  };\n\n  const filterPlanets = () => {\n    const filteredByNumeric = renderPlanets.filter((planet) => {\n      if (comparison === 'maior que') {\n        return Number(planet[column]) > Number(value);\n      }\n      if (comparison === 'menor que') {\n        return Number(planet[column]) < Number(value);\n      }\n      if (comparison === 'igual a') {\n        return Number(planet[column]) === Number(value);\n      }\n      return filteredByNumeric;\n    });\n    setRenderPlanets(filteredByNumeric);\n  };\n\n  useEffect(() => {\n    const updateOptions = () => {\n      const { filterByNumericValues } = filters;\n      const usedColumns = filterByNumericValues.map((filter) => filter.column);\n      const updatedOptions = INITIAL_COLUMNS\n        .filter((option) => !usedColumns.includes(option));\n      // ref https://stackoverflow.com/questions/14930516/compare-two-javascript-arrays-and-remove-duplicates\n      setColumnOptions(updatedOptions);\n    };\n    updateOptions();\n  }, [filters]);\n\n  const handleClick = () => {\n    setFilters({\n      ...filters,\n      filterByNumericValues: [\n        ...filters.filterByNumericValues, { column, comparison, value }],\n    });\n    filterPlanets();\n  };\n\n  const deleteFilter = (col) => {\n    setFilters({\n      ...filters,\n      filterByNumericValues:\n        filters.filterByNumericValues.filter((filter) => !filter.column.includes(col)),\n    });\n    setRenderPlanets(data);\n  };\n\n  const context = {\n    data,\n    isLoading,\n    filters,\n    handleChange,\n    renderPlanets,\n    handleClick,\n    setColumn,\n    setComparison,\n    setValue,\n    columnOptions,\n    deleteFilter,\n  };\n\n  return (\n    <PlanetsContext.Provider value={ context }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport sadBeep from '../images/sad-beep.gif';\n\nexport default function NotFound() {\n  return (\n    <section className=\"not-found\">\n      <h3>Nenhum planeta encontrado</h3>\n      <img src={ sadBeep } alt=\"Gif of R2-D2 sadly beeping\" />\n    </section>\n  );\n}\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport NotFound from './NotFound';\n\nexport default function Table() {\n  const { data, renderPlanets } = useContext(PlanetsContext);\n\n  const handleTitles = () => (Object.keys(data[0])\n    .filter((key) => !key.includes('residents'))\n    .filter((key) => !key.includes('films'))\n    .map((title, index) => (\n      <th key={ index }>\n        { title.charAt(0).toUpperCase() + title.slice(1).replace('_', ' ') }\n      </th>)));\n    // ref https://www.codegrepper.com/code-examples/javascript/return+string.charAt%280%29.toUpperCase%28%29+%2B+string.slice%281%29%3B\n\n  const handleTable = () => (renderPlanets.map((planet, index) => (\n    <tr key={ index }>\n      <td>{ planet.name }</td>\n      <td>{ planet.rotation_period }</td>\n      <td>{ planet.orbital_period }</td>\n      <td>{ planet.diameter }</td>\n      <td>{ planet.climate }</td>\n      <td>{ planet.gravity }</td>\n      <td>{ planet.terrain }</td>\n      <td>{ planet.surface_water }</td>\n      <td>{ planet.population }</td>\n      {/* <td>{ planet.films }</td> */}\n      <td>{ planet.created }</td>\n      <td>{ planet.edited }</td>\n      <td>{ planet.url }</td>\n    </tr>)));\n\n  return (\n    (renderPlanets.length === 0\n      ? <NotFound />\n      : (\n        <table>\n          <thead>\n            <tr>\n              { handleTitles() }\n            </tr>\n          </thead>\n          <tbody>\n            { handleTable() }\n          </tbody>\n        </table>\n      )\n    ));\n}\n","import React from 'react';\nimport logo from '../images/resizedlogo.png';\n\nexport default function Header() {\n  return (\n    <div>\n      <header>\n        <img src={ logo } alt=\"Star Wars logo\" />\n        <h1>Planet Search</h1>\n      </header>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport { comparisonOptions } from '../data/data';\n\nexport default function FiltersForm() {\n  const { handleChange, handleClick, setColumn,\n    setComparison, setValue, columnOptions } = useContext(PlanetsContext);\n\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">\n          <input\n            id=\"search\"\n            type=\"text\"\n            className=\"input-control search-input\"\n            placeholder=\"Pesquisar planeta\"\n            onChange={ handleChange }\n            data-testid=\"name-filter\"\n          />\n        </label>\n      </div>\n      <div className=\"form-group\">\n        <div>\n          <select\n            name=\"column\"\n            className=\"input-control\"\n            onChange={ ({ target: { value } }) => setColumn(value) }\n            data-testid=\"column-filter\"\n          >\n            { columnOptions.map((option) => (\n              <option key={ option } value={ option }>{ option }</option>\n            )) }\n          </select>\n        </div>\n        <div>\n          <select\n            name=\"comparison\"\n            className=\"input-control\"\n            onChange={ ({ target: { value } }) => setComparison(value) }\n            data-testid=\"comparison-filter\"\n          >\n            { comparisonOptions.map((option) => (\n              <option key={ option } value={ option }>{ option }</option>\n            )) }\n          </select>\n        </div>\n        <div>\n          <input\n            type=\"number\"\n            className=\"input-control\"\n            onChange={ ({ target: { value } }) => setValue(value) }\n            data-testid=\"value-filter\"\n          />\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"filter-btn\"\n            onClick={ handleClick }\n            data-testid=\"button-filter\"\n          >\n            Filtrar\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\n\nexport default function Filters() {\n  const { filters: { filterByNumericValues }, deleteFilter } = useContext(PlanetsContext);\n  return (\n    <section className=\"filters-section\">\n      { filterByNumericValues.map(({ column, comparison, value }, index) => (\n        <div key={ index } data-testid=\"filter\" className=\"filter\">\n          <p>\n            { column }\n            {' '}\n            { comparison }\n            {' '}\n            { value }\n          </p>\n          <button\n            type=\"button\"\n            className=\"delete-btn\"\n            onClick={ () => deleteFilter(column) }\n          >\n            x\n          </button>\n        </div>\n      ))}\n    </section>\n  );\n}\n","import React from 'react';\n\nexport default function Loading() {\n  return (\n    <h1 className=\"loading\">Carregando...</h1>\n  );\n}\n","import React, { useContext } from 'react';\nimport Table from '../components/Table';\nimport Header from '../components/Header';\nimport FiltersForm from '../components/FiltersForm';\nimport Filters from '../components/Filters';\nimport PlanetsContext from '../context/PlanetsContext';\nimport Loading from '../components/Loading';\n\nexport default function Home() {\n  const { isLoading } = useContext(PlanetsContext);\n  return (\n    <>\n      <Header />\n      <FiltersForm />\n      <Filters />\n      { isLoading ? <Loading /> : <Table /> }\n    </>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport PlanetsProvider from './context/PlanetsProvider';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <PlanetsProvider>\n      <Home />\n    </PlanetsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/sad-beep.28f8a874.gif\";"],"sourceRoot":""}